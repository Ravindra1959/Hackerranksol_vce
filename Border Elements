You are given a sequence of N integers. These integers are to be stored in a matrix with M columns. They will be stored in row-major order.
Your task is to print the values of all the border elements.
A border element is the last element in any row.

Input
First line contains two integers N and M
Second line contains N space separated integers denoting the sequence.

Output
First line contains the border elements for row-major order.

See the sample case for clarity

Sample Input 0

6 3
1 2 3 4 5 6
Sample Output 0

3 6 
Explanation 0

row major representation is :
1 2 3
4 5 6

Border elements are :
3 6

Code:

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() 
{
    int numberOfElements, borderValue;
    scanf("%d%d",&numberOfElements,&borderValue);
    int arr[numberOfElements], i;
    for(i=0;i<numberOfElements;i++) scanf("%d",&arr[i]);
    
    for(i=borderValue-1; i<numberOfElements; i+=borderValue)
        printf("%d ",arr[i]);
    return 0;
}


OR

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() 
{
    int numberOfElements, borderValue;
    scanf("%d%d",&numberOfElements,&borderValue);
    int rows = numberOfElements / borderValue;
    int cols = borderValue;
    int arr[rows][cols],i,j;
    for(i=0;i<rows;i++)
        for(j=0;j<cols;j++)
            scanf("%d",&arr[i][j]);
    for(i=0;i<rows;i++)
        printf("%d ",arr[i][cols-1]);
    return 0;
}
